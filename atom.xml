<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog | Raven Xu</title>
  <icon>https://ravenxu.top/images/letter-r-32x32.png</icon>
  <subtitle>Make positive impact</subtitle>
  <link href="https://ravenxu.top/atom.xml" rel="self"/>
  
  <link href="https://ravenxu.top/"/>
  <updated>2022-06-02T10:05:29.744Z</updated>
  <id>https://ravenxu.top/</id>
  
  <author>
    <name>Raven Xu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux 的进程和线程是如何使用内存的？</title>
    <link href="https://ravenxu.top/a.%E6%8A%80%E6%9C%AF%E6%8E%A2%E7%A9%B6/History/220603-Linux-%E7%9A%84%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B%E6%98%AF%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%86%85%E5%AD%98%E7%9A%84%EF%BC%9F/"/>
    <id>https://ravenxu.top/a.%E6%8A%80%E6%9C%AF%E6%8E%A2%E7%A9%B6/History/220603-Linux-%E7%9A%84%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B%E6%98%AF%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E5%86%85%E5%AD%98%E7%9A%84%EF%BC%9F/</id>
    <published>2022-06-02T16:00:00.000Z</published>
    <updated>2022-06-02T10:05:29.744Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;毫无疑问，操作系统中内存的资源分配是由操作系统内核来完成的。以 32 位操作系统为例，它一共有 4G 的物理内存空间，为了让进程可以更方便地使用内存，不必关心底层的物理内存分配，内核以虚拟内存的方式为进程分配内存，每个进程都有 4G</summary>
        
      
    
    
    
    <category term="技术探究" scheme="https://ravenxu.top/categories/%E6%8A%80%E6%9C%AF%E6%8E%A2%E7%A9%B6/"/>
    
    
    <category term="Linux" scheme="https://ravenxu.top/tags/Linux/"/>
    
    <category term="进程" scheme="https://ravenxu.top/tags/%E8%BF%9B%E7%A8%8B/"/>
    
    <category term="线程" scheme="https://ravenxu.top/tags/%E7%BA%BF%E7%A8%8B/"/>
    
    <category term="内存" scheme="https://ravenxu.top/tags/%E5%86%85%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>挂载到底是什么意思？</title>
    <link href="https://ravenxu.top/g.%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/History/220527-%E6%8C%82%E8%BD%BD%E5%88%B0%E5%BA%95%E6%98%AF%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D%EF%BC%9F/"/>
    <id>https://ravenxu.top/g.%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/History/220527-%E6%8C%82%E8%BD%BD%E5%88%B0%E5%BA%95%E6%98%AF%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D%EF%BC%9F/</id>
    <published>2022-05-26T16:00:00.000Z</published>
    <updated>2022-05-24T05:40:46.396Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;对挂载这一词汇印象最深的是在使用 Docker 时，需要在启动 Docker 容器时制定要挂载的文件，一旦 Docker 容器启动了，就无法再新增加被挂载的文件。挂载显然是一个计算机领域的专属词汇，所以乍一看可能不能完全 get 到它的内涵。&lt;br&gt;挂载来自于对英文单词</summary>
        
      
    
    
    
    <category term="知识角落" scheme="https://ravenxu.top/categories/%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/"/>
    
    
    <category term="Linux" scheme="https://ravenxu.top/tags/Linux/"/>
    
    <category term="文件系统" scheme="https://ravenxu.top/tags/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="VFS" scheme="https://ravenxu.top/tags/VFS/"/>
    
    <category term="挂载" scheme="https://ravenxu.top/tags/%E6%8C%82%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>多核处理器可以并行运行多个进程吗？</title>
    <link href="https://ravenxu.top/a.%E6%8A%80%E6%9C%AF%E6%8E%A2%E7%A9%B6/History/220520-%E5%A4%9A%E6%A0%B8%E5%A4%84%E7%90%86%E5%99%A8%E5%8F%AF%E4%BB%A5%E5%B9%B6%E8%A1%8C%E8%BF%90%E8%A1%8C%E5%A4%9A%E4%B8%AA%E8%BF%9B%E7%A8%8B%E5%90%97%EF%BC%9F/"/>
    <id>https://ravenxu.top/a.%E6%8A%80%E6%9C%AF%E6%8E%A2%E7%A9%B6/History/220520-%E5%A4%9A%E6%A0%B8%E5%A4%84%E7%90%86%E5%99%A8%E5%8F%AF%E4%BB%A5%E5%B9%B6%E8%A1%8C%E8%BF%90%E8%A1%8C%E5%A4%9A%E4%B8%AA%E8%BF%9B%E7%A8%8B%E5%90%97%EF%BC%9F/</id>
    <published>2022-05-19T16:00:00.000Z</published>
    <updated>2022-05-24T05:41:57.229Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;最近在知乎上看到一个回答说多核 CPU 同时只能并行一个进程但是可以并行这个进程的多个线程。&lt;/p&gt;
&lt;p&gt;我怎么记得多核 CPU 是可以并行运行多个进程的？&lt;br&gt;刚想驳斥一下这个答案发现竟然有将近 100</summary>
        
      
    
    
    
    <category term="技术探究" scheme="https://ravenxu.top/categories/%E6%8A%80%E6%9C%AF%E6%8E%A2%E7%A9%B6/"/>
    
    
    <category term="Linux" scheme="https://ravenxu.top/tags/Linux/"/>
    
    <category term="CPU" scheme="https://ravenxu.top/tags/CPU/"/>
    
    <category term="进程" scheme="https://ravenxu.top/tags/%E8%BF%9B%E7%A8%8B/"/>
    
    <category term="线程" scheme="https://ravenxu.top/tags/%E7%BA%BF%E7%A8%8B/"/>
    
    <category term="并行" scheme="https://ravenxu.top/tags/%E5%B9%B6%E8%A1%8C/"/>
    
    <category term="并发" scheme="https://ravenxu.top/tags/%E5%B9%B6%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Linux 内核空间和用户空间</title>
    <link href="https://ravenxu.top/g.%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/History/220513-Linux-%E5%86%85%E6%A0%B8%E7%A9%BA%E9%97%B4%E5%92%8C%E7%94%A8%E6%88%B7%E7%A9%BA%E9%97%B4/"/>
    <id>https://ravenxu.top/g.%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/History/220513-Linux-%E5%86%85%E6%A0%B8%E7%A9%BA%E9%97%B4%E5%92%8C%E7%94%A8%E6%88%B7%E7%A9%BA%E9%97%B4/</id>
    <published>2022-05-12T16:00:00.000Z</published>
    <updated>2022-05-13T15:20:04.249Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Linux 为了提高操作系统的稳定性和可用性将内存地址空间划分为内核空间（kernel space）和用户空间（user space），本文以 32 位系统为例介绍 Linux</summary>
        
      
    
    
    
    <category term="知识角落" scheme="https://ravenxu.top/categories/%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/"/>
    
    
    <category term="Linux" scheme="https://ravenxu.top/tags/Linux/"/>
    
    <category term="操作系统" scheme="https://ravenxu.top/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="内核" scheme="https://ravenxu.top/tags/%E5%86%85%E6%A0%B8/"/>
    
  </entry>
  
  <entry>
    <title>Linux 绑定程序到特定 CPU 上运行</title>
    <link href="https://ravenxu.top/a.%E6%8A%80%E6%9C%AF%E6%8E%A2%E7%A9%B6/History/220506-Linux-%E7%BB%91%E5%AE%9A%E7%A8%8B%E5%BA%8F%E5%88%B0%E7%89%B9%E5%AE%9A-CPU-%E4%B8%8A%E8%BF%90%E8%A1%8C/"/>
    <id>https://ravenxu.top/a.%E6%8A%80%E6%9C%AF%E6%8E%A2%E7%A9%B6/History/220506-Linux-%E7%BB%91%E5%AE%9A%E7%A8%8B%E5%BA%8F%E5%88%B0%E7%89%B9%E5%AE%9A-CPU-%E4%B8%8A%E8%BF%90%E8%A1%8C/</id>
    <published>2022-05-05T16:00:00.000Z</published>
    <updated>2022-05-06T14:30:05.225Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;现在我们日程使用的手机、电脑、服务器使用的基本上都是多核 CPU，多核 CPU 允许我们并行地运行多个程序。我们的程序（进程/线程）跑在哪一个核心上是由操作系统内核来调度的，内核会将我们的程序调度到不同的核心上来运行，那有没有方法能让我们的程序一直在同一个 CPU</summary>
        
      
    
    
    
    <category term="技术探究" scheme="https://ravenxu.top/categories/%E6%8A%80%E6%9C%AF%E6%8E%A2%E7%A9%B6/"/>
    
    
    <category term="Linux" scheme="https://ravenxu.top/tags/Linux/"/>
    
    <category term="技术研究" scheme="https://ravenxu.top/tags/%E6%8A%80%E6%9C%AF%E7%A0%94%E7%A9%B6/"/>
    
    <category term="调度" scheme="https://ravenxu.top/tags/%E8%B0%83%E5%BA%A6/"/>
    
    <category term="CPU" scheme="https://ravenxu.top/tags/CPU/"/>
    
  </entry>
  
  <entry>
    <title>一文总结常用排序算法及面试考点</title>
    <link href="https://ravenxu.top/b.%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/History/220429-%E4%B8%80%E6%96%87%E6%80%BB%E7%BB%93%E5%B8%B8%E7%94%A8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%8F%8A%E9%9D%A2%E8%AF%95%E8%80%83%E7%82%B9/"/>
    <id>https://ravenxu.top/b.%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/History/220429-%E4%B8%80%E6%96%87%E6%80%BB%E7%BB%93%E5%B8%B8%E7%94%A8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%8F%8A%E9%9D%A2%E8%AF%95%E8%80%83%E7%82%B9/</id>
    <published>2022-04-28T16:00:00.000Z</published>
    <updated>2022-04-29T09:29:35.290Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;ul&gt;
&lt;li&gt;排序算法经常作为CS算法课程中的入门算法来引入，因为各种各样的排序算法中包含了很多的计算机科学思想，例如：&lt;ul&gt;
&lt;li&gt;基于比较（Comparision）和不基于比较的策略；&lt;/li&gt;
&lt;li&gt;迭代（Iterative）或递归（Recursive）的实现&lt;/</summary>
        
      
    
    
    
    <category term="学习笔记" scheme="https://ravenxu.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="算法" scheme="https://ravenxu.top/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="面试" scheme="https://ravenxu.top/tags/%E9%9D%A2%E8%AF%95/"/>
    
    <category term="排序" scheme="https://ravenxu.top/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>深入理解 C++ 的左值和右值</title>
    <link href="https://ravenxu.top/a.%E6%8A%80%E6%9C%AF%E6%8E%A2%E7%A9%B6/History/220422-%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3-C-%E7%9A%84%E5%B7%A6%E5%80%BC%E5%92%8C%E5%8F%B3%E5%80%BC/"/>
    <id>https://ravenxu.top/a.%E6%8A%80%E6%9C%AF%E6%8E%A2%E7%A9%B6/History/220422-%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3-C-%E7%9A%84%E5%B7%A6%E5%80%BC%E5%92%8C%E5%8F%B3%E5%80%BC/</id>
    <published>2022-04-21T16:00:00.000Z</published>
    <updated>2022-04-29T09:47:12.378Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;C++ 的左值（lvalue）和右值（rvalue）的概念在 C++11 后变得越来越重要，作为一个不是很容易理解的概念，一旦我们搞清楚了他们的含义，将有助于我们进一步理解一些高级的 C++ 特性，例如 move/forward 的新语义及右值引用（rvalue</summary>
        
      
    
    
    
    <category term="技术探究" scheme="https://ravenxu.top/categories/%E6%8A%80%E6%9C%AF%E6%8E%A2%E7%A9%B6/"/>
    
    
    <category term="C++" scheme="https://ravenxu.top/tags/C/"/>
    
    <category term="左值引用" scheme="https://ravenxu.top/tags/%E5%B7%A6%E5%80%BC%E5%BC%95%E7%94%A8/"/>
    
    <category term="右值引用" scheme="https://ravenxu.top/tags/%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>如何写好技术博客？</title>
    <link href="https://ravenxu.top/e.%E8%A7%82%E5%AF%9F%E6%80%9D%E8%80%83/History/220415-%E5%A6%82%E4%BD%95%E5%9D%9A%E6%8C%81%E5%86%99%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2%EF%BC%9F/"/>
    <id>https://ravenxu.top/e.%E8%A7%82%E5%AF%9F%E6%80%9D%E8%80%83/History/220415-%E5%A6%82%E4%BD%95%E5%9D%9A%E6%8C%81%E5%86%99%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2%EF%BC%9F/</id>
    <published>2022-04-14T16:00:00.000Z</published>
    <updated>2022-05-15T04:56:50.700Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;写技术博客是大部分程序员都很想坚持却又总是断断续续的一件事。大家愿意写技术博客是因为有很多好处，例如写博客有助于整理平常的思考、梳理一个复杂难懂的技术细节；同时也可以满足分享与传播的欲望，幸运的话还能提升自己的</summary>
        
      
    
    
    
    <category term="观察思考" scheme="https://ravenxu.top/categories/%E8%A7%82%E5%AF%9F%E6%80%9D%E8%80%83/"/>
    
    
    <category term="经验" scheme="https://ravenxu.top/tags/%E7%BB%8F%E9%AA%8C/"/>
    
    <category term="博客" scheme="https://ravenxu.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="blog" scheme="https://ravenxu.top/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>记忆化搜索到底是不是动态规划？</title>
    <link href="https://ravenxu.top/g.%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/History/220408-%E8%AE%B0%E5%BF%86%E5%8C%96%E6%90%9C%E7%B4%A2%E5%88%B0%E5%BA%95%E6%98%AF%E4%B8%8D%E6%98%AF%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%9F/"/>
    <id>https://ravenxu.top/g.%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/History/220408-%E8%AE%B0%E5%BF%86%E5%8C%96%E6%90%9C%E7%B4%A2%E5%88%B0%E5%BA%95%E6%98%AF%E4%B8%8D%E6%98%AF%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%EF%BC%9F/</id>
    <published>2022-04-07T16:00:00.000Z</published>
    <updated>2022-05-06T14:31:41.653Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;有一个问题一直困扰着我，就是使用备忘录进行记忆化搜索的方式到底算不算动态规划？有此疑惑是因为我常常发现，在 LeetCode 上使用记忆化搜索求解往往效率很差，时间复杂度排在后 20%，而使用 DP table</summary>
        
      
    
    
    
    <category term="知识角落" scheme="https://ravenxu.top/categories/%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/"/>
    
    
    <category term="算法" scheme="https://ravenxu.top/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="动态规划" scheme="https://ravenxu.top/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>使用 Docker 容器搭建 Docker 服务监控</title>
    <link href="https://ravenxu.top/g.%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/History/220401-%E4%BD%BF%E7%94%A8-docker-%E5%AE%B9%E5%99%A8%E6%90%AD%E5%BB%BA-docker-%E6%9C%8D%E5%8A%A1%E7%9B%91%E6%8E%A7/"/>
    <id>https://ravenxu.top/g.%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/History/220401-%E4%BD%BF%E7%94%A8-docker-%E5%AE%B9%E5%99%A8%E6%90%AD%E5%BB%BA-docker-%E6%9C%8D%E5%8A%A1%E7%9B%91%E6%8E%A7/</id>
    <published>2022-03-31T16:00:00.000Z</published>
    <updated>2022-04-18T06:25:01.284Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;ul&gt;
&lt;li&gt;在之前的文章&lt;a href=&quot;https://raven.feishu.cn/docs/doccnT7U46wPIOuHxf7vHI4Nspz&quot;&gt;使用InfluxDB和Telegraf为服务器搭建基础监控&lt;/a&gt;中介绍过使用 InfluxDB 和</summary>
        
      
    
    
    
    <category term="知识角落" scheme="https://ravenxu.top/categories/%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/"/>
    
    
    <category term="Docker" scheme="https://ravenxu.top/tags/Docker/"/>
    
    <category term="监控" scheme="https://ravenxu.top/tags/%E7%9B%91%E6%8E%A7/"/>
    
    <category term="InfluxDB" scheme="https://ravenxu.top/tags/InfluxDB/"/>
    
    <category term="Telegraf" scheme="https://ravenxu.top/tags/Telegraf/"/>
    
  </entry>
  
  <entry>
    <title>Python 性能分析入门 —— cProfile与可视化</title>
    <link href="https://ravenxu.top/g.%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/History/220325-Python-%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%85%A5%E9%97%A8-%E2%80%94%E2%80%94-cProfile%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    <id>https://ravenxu.top/g.%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/History/220325-Python-%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%85%A5%E9%97%A8-%E2%80%94%E2%80%94-cProfile%E4%B8%8E%E5%8F%AF%E8%A7%86%E5%8C%96/</id>
    <published>2022-03-24T16:00:00.000Z</published>
    <updated>2022-04-18T06:28:04.796Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;最近在使用 Python 的 matplotlib 绘图库来进行三维空间地图的可视化，但是发现实际绘制速度特别慢，画图大概需要 90s 左右。之前有听说 matplotlib</summary>
        
      
    
    
    
    <category term="知识角落" scheme="https://ravenxu.top/categories/%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/"/>
    
    
    <category term="Python" scheme="https://ravenxu.top/tags/Python/"/>
    
    <category term="cProfile" scheme="https://ravenxu.top/tags/cProfile/"/>
    
    <category term="性能分析" scheme="https://ravenxu.top/tags/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/"/>
    
    <category term="matplotlib" scheme="https://ravenxu.top/tags/matplotlib/"/>
    
    <category term="SnakeViz" scheme="https://ravenxu.top/tags/SnakeViz/"/>
    
  </entry>
  
  <entry>
    <title>Git commit message 规范</title>
    <link href="https://ravenxu.top/g.%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/History/220318-Git-commit-message-%E8%A7%84%E8%8C%83/"/>
    <id>https://ravenxu.top/g.%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/History/220318-Git-commit-message-%E8%A7%84%E8%8C%83/</id>
    <published>2022-03-17T16:00:00.000Z</published>
    <updated>2022-05-06T14:33:52.293Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Git commit 的 message 是 git 提交关键的描述信息，很多人出于习惯或是想尽快 git push 然后合上电脑休息往往忽略了 message 的重要性，一份好的 message</summary>
        
      
    
    
    
    <category term="知识角落" scheme="https://ravenxu.top/categories/%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/"/>
    
    
    <category term="Git" scheme="https://ravenxu.top/tags/Git/"/>
    
    <category term="风格" scheme="https://ravenxu.top/tags/%E9%A3%8E%E6%A0%BC/"/>
    
    <category term="规范化" scheme="https://ravenxu.top/tags/%E8%A7%84%E8%8C%83%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Linux安装软件的几种方式</title>
    <link href="https://ravenxu.top/a.%E6%8A%80%E6%9C%AF%E6%8E%A2%E7%A9%B6/History/220311-Linux%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    <id>https://ravenxu.top/a.%E6%8A%80%E6%9C%AF%E6%8E%A2%E7%A9%B6/History/220311-Linux%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</id>
    <published>2022-03-10T16:00:00.000Z</published>
    <updated>2022-03-11T13:22:22.116Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Linux</summary>
        
      
    
    
    
    <category term="技术探究" scheme="https://ravenxu.top/categories/%E6%8A%80%E6%9C%AF%E6%8E%A2%E7%A9%B6/"/>
    
    
    <category term="服务器" scheme="https://ravenxu.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="Linux" scheme="https://ravenxu.top/tags/Linux/"/>
    
    <category term="Ubuntu" scheme="https://ravenxu.top/tags/Ubuntu/"/>
    
    <category term="环境" scheme="https://ravenxu.top/tags/%E7%8E%AF%E5%A2%83/"/>
    
    <category term="包管理" scheme="https://ravenxu.top/tags/%E5%8C%85%E7%AE%A1%E7%90%86/"/>
    
    <category term="apt" scheme="https://ravenxu.top/tags/apt/"/>
    
    <category term="yum" scheme="https://ravenxu.top/tags/yum/"/>
    
  </entry>
  
  <entry>
    <title>GCC 中 gcc 和 g++ 的区别</title>
    <link href="https://ravenxu.top/g.%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/History/220304-GCC-%E4%B8%AD-gcc-%E5%92%8C-g-%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>https://ravenxu.top/g.%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/History/220304-GCC-%E4%B8%AD-gcc-%E5%92%8C-g-%E7%9A%84%E5%8C%BA%E5%88%AB/</id>
    <published>2022-03-03T16:00:00.000Z</published>
    <updated>2022-05-06T14:35:13.908Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;之前写的 C++ 大部分都是来自在 LeetCode 上的算法题，很久没亲自动手编译 C++ 程序，今天写了一段 C++</summary>
        
      
    
    
    
    <category term="知识角落" scheme="https://ravenxu.top/categories/%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/"/>
    
    
    <category term="C++" scheme="https://ravenxu.top/tags/C/"/>
    
    <category term="编译" scheme="https://ravenxu.top/tags/%E7%BC%96%E8%AF%91/"/>
    
    <category term="gcc" scheme="https://ravenxu.top/tags/gcc/"/>
    
    <category term="g++" scheme="https://ravenxu.top/tags/g/"/>
    
  </entry>
  
  <entry>
    <title>使用 Github Actions 自动编译、发布 LaTeX 文档</title>
    <link href="https://ravenxu.top/c.%E7%A7%91%E7%A0%94%E5%88%86%E4%BA%AB/History/220225-%E4%BD%BF%E7%94%A8-Github-Actions-%E8%87%AA%E5%8A%A8%E7%BC%96%E8%AF%91%E3%80%81%E5%8F%91%E5%B8%83-LaTeX-%E6%96%87%E6%A1%A3/"/>
    <id>https://ravenxu.top/c.%E7%A7%91%E7%A0%94%E5%88%86%E4%BA%AB/History/220225-%E4%BD%BF%E7%94%A8-Github-Actions-%E8%87%AA%E5%8A%A8%E7%BC%96%E8%AF%91%E3%80%81%E5%8F%91%E5%B8%83-LaTeX-%E6%96%87%E6%A1%A3/</id>
    <published>2022-02-24T16:00:00.000Z</published>
    <updated>2022-03-01T05:50:33.631Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Github Actions 是 Github 推出的持续化集成工具，进一步加快软件开发的编译、部署、发布流程。基于 Github 进行多人协作编辑 Latex 文档是非常先进的科研文档写作方式，如今可以利用 Github Actions</summary>
        
      
    
    
    
    <category term="科研分享" scheme="https://ravenxu.top/categories/%E7%A7%91%E7%A0%94%E5%88%86%E4%BA%AB/"/>
    
    
    <category term="LaTeX" scheme="https://ravenxu.top/tags/LaTeX/"/>
    
    <category term="Github" scheme="https://ravenxu.top/tags/Github/"/>
    
    <category term="Github Actions" scheme="https://ravenxu.top/tags/Github-Actions/"/>
    
    <category term="自动化流程" scheme="https://ravenxu.top/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%81%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>还是想夸夸「东大信息化」</title>
    <link href="https://ravenxu.top/d.%E6%9D%82%E6%96%87%E9%9A%8F%E7%AC%94/History/220218-%E8%BF%98%E6%98%AF%E6%83%B3%E5%A4%B8%E5%A4%B8%E3%80%8C%E4%B8%9C%E5%A4%A7%E4%BF%A1%E6%81%AF%E5%8C%96%E3%80%8D/"/>
    <id>https://ravenxu.top/d.%E6%9D%82%E6%96%87%E9%9A%8F%E7%AC%94/History/220218-%E8%BF%98%E6%98%AF%E6%83%B3%E5%A4%B8%E5%A4%B8%E3%80%8C%E4%B8%9C%E5%A4%A7%E4%BF%A1%E6%81%AF%E5%8C%96%E3%80%8D/</id>
    <published>2022-02-17T16:00:00.000Z</published>
    <updated>2022-04-29T09:28:00.871Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;最近因为疫情管控，很多老师都不方便进学校，东大信息化即时推出了线上电子签的功能，对于忙于硕士开题的我来说解决了很多问题。&lt;/p&gt;
&lt;p&gt;可能对于很多本科生同学来说已经习惯了东大的校园信息服务，但是作为本科毕业于另一所985高校的我，在本硕的实际对比下，还是想夸夸咱们“东大信</summary>
        
      
    
    
    
    <category term="杂文随笔" scheme="https://ravenxu.top/categories/%E6%9D%82%E6%96%87%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="SEU" scheme="https://ravenxu.top/tags/SEU/"/>
    
    <category term="信息化" scheme="https://ravenxu.top/tags/%E4%BF%A1%E6%81%AF%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>浅试一下 pytest</title>
    <link href="https://ravenxu.top/g.%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/History/220211-%E6%B5%85%E8%AF%95%E4%B8%80%E4%B8%8B%20pytest/"/>
    <id>https://ravenxu.top/g.%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/History/220211-%E6%B5%85%E8%AF%95%E4%B8%80%E4%B8%8B%20pytest/</id>
    <published>2022-02-10T16:00:00.000Z</published>
    <updated>2022-05-06T14:37:16.582Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Python 自带的默认测试框架是 unittest，但是目前更主流被使用的第三方单元测试框架是</summary>
        
      
    
    
    
    <category term="知识角落" scheme="https://ravenxu.top/categories/%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/"/>
    
    
    <category term="Python" scheme="https://ravenxu.top/tags/Python/"/>
    
    <category term="单元测试" scheme="https://ravenxu.top/tags/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
    
    <category term="pytest" scheme="https://ravenxu.top/tags/pytest/"/>
    
  </entry>
  
  <entry>
    <title>Ctrl-C，Ctrl-Z，Ctrl-D 的区别</title>
    <link href="https://ravenxu.top/g.%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/History/220204-Ctrl-C%EF%BC%8CCtrl-Z%EF%BC%8CCtrl-D-%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>https://ravenxu.top/g.%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/History/220204-Ctrl-C%EF%BC%8CCtrl-Z%EF%BC%8CCtrl-D-%E7%9A%84%E5%8C%BA%E5%88%AB/</id>
    <published>2022-02-03T16:00:00.000Z</published>
    <updated>2022-05-06T14:07:04.410Z</updated>
    
    
    
    
    <category term="知识角落" scheme="https://ravenxu.top/categories/%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/"/>
    
    
    <category term="Linux" scheme="https://ravenxu.top/tags/Linux/"/>
    
    <category term="shell" scheme="https://ravenxu.top/tags/shell/"/>
    
    <category term="信号量" scheme="https://ravenxu.top/tags/%E4%BF%A1%E5%8F%B7%E9%87%8F/"/>
    
  </entry>
  
  <entry>
    <title>C++ 引用的理解与实现原理</title>
    <link href="https://ravenxu.top/g.%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/History/220114-C-%E5%BC%95%E7%94%A8%E7%9A%84%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/"/>
    <id>https://ravenxu.top/g.%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/History/220114-C-%E5%BC%95%E7%94%A8%E7%9A%84%E7%90%86%E8%A7%A3%E4%B8%8E%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/</id>
    <published>2022-01-13T16:00:00.000Z</published>
    <updated>2022-06-07T14:21:14.185Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;如何理解引用？&lt;/p&gt;
&lt;p&gt;在使用上，我们要把引用当成另一个对象的“别名”，即看到一个引用，我们可以直接把它脑补成原来的对象，这样会衍生出引用的一系列特性。&lt;/p&gt;
</summary>
        
      
    
    
    
    <category term="知识角落" scheme="https://ravenxu.top/categories/%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/"/>
    
    
    <category term="C++" scheme="https://ravenxu.top/tags/C/"/>
    
    <category term="C/C++" scheme="https://ravenxu.top/tags/C-C/"/>
    
    <category term="引用" scheme="https://ravenxu.top/tags/%E5%BC%95%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>程序调试必须使用调试工具吗？</title>
    <link href="https://ravenxu.top/g.%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/History/220107-%E7%A8%8B%E5%BA%8F%E8%B0%83%E8%AF%95%E5%BF%85%E9%A1%BB%E4%BD%BF%E7%94%A8%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7%E5%90%97%EF%BC%9F/"/>
    <id>https://ravenxu.top/g.%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/History/220107-%E7%A8%8B%E5%BA%8F%E8%B0%83%E8%AF%95%E5%BF%85%E9%A1%BB%E4%BD%BF%E7%94%A8%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7%E5%90%97%EF%BC%9F/</id>
    <published>2022-01-06T16:00:00.000Z</published>
    <updated>2022-01-07T11:29:07.957Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;一直以来，我都更习惯于通过直接 print 内容来调试，只有在 print 无法满足需求或过于繁琐的时候才会不情不愿地去用 gdb 或 IDE 提供的调试工具来打断点等等。。。&lt;/p&gt;
&lt;p&gt;之所以我会这样我想主要有两个因素，一是我一直没有认真学习过 gdb</summary>
        
      
    
    
    
    <category term="知识角落" scheme="https://ravenxu.top/categories/%E7%9F%A5%E8%AF%86%E8%A7%92%E8%90%BD/"/>
    
    
    <category term="调试" scheme="https://ravenxu.top/tags/%E8%B0%83%E8%AF%95/"/>
    
    <category term="debug" scheme="https://ravenxu.top/tags/debug/"/>
    
  </entry>
  
</feed>
